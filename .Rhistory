for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completerow
}
complete(directory_input,id_input)
complete <- function(directory, id = 1:332) {
completedata = c(2,0)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completerow
}
complete(directory_input,id_input)
complete <- function(directory, id = 1:332) {
completedata = c(2,1)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completerow
}
complete(directory_input,id_input)
complete <- function(directory, id = 1:332) {
completedata = c(2,2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completerow
}
complete(directory_input,id_input)
#Gabriel Lages - Solution for Programming Assignment 1: Air Pollution
#08/12/2015
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 3
complete <- function(directory, id = 1:332) {
col.names <- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completerow
}
complete(directory_input,id_input)
#Gabriel Lages - Solution for Programming Assignment 1: Air Pollution
#08/12/2015
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 3
complete <- function(directory, id = 1:332) {
col.names <- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
#completedata<-rbind(completedata,completerow)
}
completerow
}
complete(directory_input,id_input)
complete <- function(directory, id = 1:332) {
col.names <- c("id","nobs")
completedata = matrix()
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completerow
}
complete(directory_input,id_input)
completedata = matrix()
completedata = matrix(,2)
completedata
completedata = matrix(2,,col.names)
completedata = matrix(2,)
completedata
completedata = matrix(2,)
completedata
completedata = matrix(2,1)
completedata
completedata = matrix(2,2)
completedata
?matrix
completedata = matrix(nrow = 0, ncol = 2)
completedata
completedata = matrix(nrow = 0, ncol = 2, col.names (c("id","nobs")))
completedata = matrix(nrow = 0, ncol = 2, col.names(c("id","nobs")))
completedata = matrix(nrow = 0, ncol = 2, dim.names(c("id","nobs")))
completedata = matrix(nrow = 0, ncol = 2, dimnames(c("id","nobs")))
completedata = matrix(nrow = 0, ncol = 2, dimnames(,c("id","nobs")))
completedata = matrix(nrow = 0, ncol = 2, colnames(c("id","nobs")))
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
completedata
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
completedata<-rbind(completedata,c(1,1))
completedata
#Gabriel Lages - Solution for Programming Assignment 1: Air Pollution
#08/12/2015
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 3
complete <- function(directory, id = 1:332) {
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completedata
}
complete(directory_input,id_input)
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 1
complete <- function(directory, id = 1:332) {
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completedata
}
complete(directory_input,id_input)
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
completedata<-rbind(completedata,c(1,1))
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 1:10
complete <- function(directory, id = 1:332) {
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completedata
}
complete(directory_input,id_input)
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
completedata<-rbind(completedata,c(1,1))
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 10
complete <- function(directory, id = 1:332) {
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completedata
}
complete(directory_input,id_input)
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 10
complete <- function(directory, id = 1:332) {
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-cbind(completedata,completerow)
}
completedata
}
complete(directory_input,id_input)
id_input<- 10
complete <- function(directory, id = 1:332) {
completedata = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completedata
}
complete(directory_input,id_input)
complete(directory_input,1:2)
directory_input <- "C:/Gabriel/Biblioteca/Cursos/R - Assignment/specdata"
id_input<- 10
complete <- function(directory, id = 1:332) {
completedata = as.data.frame(matrix(nrow = 0, ncol = 2))
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completedata
}
complete(directory_input,1:2)
complete(directory_input,1)
complete <- function(directory, id = 1:332) {
completedata = matrix(nrow = 0, ncol = 2)
completerow = matrix(nrow = 0, ncol = 2)
colnames(completedata)<- c("id","nobs")
database2 = numeric()
for (i in id) {
fileread = read.csv(paste0(directory,"/",sprintf("%03d", i),".csv"))
database2 = c(database2, fileread)
completerow<-c(i,sum(complete.cases(database2)))
completedata<-rbind(completedata,completerow)
}
completedata
}
complete(directory_input,1)
complete(directory_input,1:10)
q()
swirl()
install.packages("swirl")
library(swirl)
rm(list=ls())
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
print(cran)
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-filter(pack_sum,count>679)
top_counts<-filter
top_counts<-filter(pack_sum,count>679)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
# Seting the Working Directory
setwd("C:/Gabriel/Biblioteca/Cursos/R - Assignment/RR - 1")
if (!file.exists("data")){dir.create("data")}
## Course Project 1 - Reproducible Research
## Installing Packages
install.packages("downloader")
library(downloader)
install.packages("ggplot2")
library(ggplot2)
#Downloading Data
fileurl<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download(fileurl, dest="./data/dataset.zip", mode="wb")
unzip("./data/dataset.zip")
?unzip
unzip("./data/dataset.zip",exdir = "./data/")
unzip("./data/dataset.zip", exdir = "data")
read.csv("./data/activity.csv")
database<-read.csv("./data/activity.csv")
head(database,n=20)
tail(database,n=20)
stepsperday <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
database
stepsperday <- tapply(database$steps, database$date, FUN=sum, na.rm=TRUE)
stepsperday
qplot(stepsperday, binwidth=1000, xlab="total number of steps taken each day")
hist(stepsperday)
mean(stepsperday, na.rm=TRUE)
median(stepsperday, na.rm=TRUE)
hist(stepsperday, na.rm=TRUE)
stepsperday
stepsperday
hist(stepsperday, na.rm=TRUE)
hist(stepsperday)
hist(stepsperday)
data.frame(stepsperday)
stepsperday <- data.frame(tapply(database$steps, database$date, FUN=sum, na.rm=TRUE))
names(stepsperday)<-c("Date","Total Steps per Day")
colnames(stepsperday)<-c("Date","Total Steps per Day")
colnames(stepsperday)<-c("Total Steps per Day")
stepsperday
qplot(Total Steps per Day, data=stepsperday, geom="histogram")
qplot("Total Steps per Day", data=stepsperday, geom="histogram")
qplot(stepsperday, geom="histogram")
colnames(stepsperday)<-c("steps")
hist(stepsperday)
qplot(rating, data=stepsperday, geom="histogram")
qplot(data=stepsperday, geom="histogram")
qplot(steps , data=stepsperday, geom="histogram")
qplot(steps>0 , data=stepsperday, geom="histogram")
stepsperday
stepsperday<-(stepsperday$steps>0)
stepsperday
stepsperday <- data.frame(tapply(database$steps, database$date, FUN=sum, na.rm=TRUE))
colnames(stepsperday)<-c("steps")
hist(stepsperday)
hist(stepsperday$steps)
database$steps
qplot(steps , data=stepsperday, geom="histogram")
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000)
hist(stepsperday$steps)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000)
hist(stepsperday$steps)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=2000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=3000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_density()
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) +  geom_histogram(binwidth = 1)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000, colour = "darkgreen", fill = "white")
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "white")
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "white",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "darkblue",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "lightgray",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "tomatoe",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "tomato",binwidth=5000)
qplot(steps , data=stepsperday) + geom_histogram(colour = "darkgreen", fill = "tomato",binwidth=5000)
qplot(steps , data=stepsperday) + geom_histogram(colour = "darkgreen", fill = "tomato",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "tomato",binwidth=5000)
qplot(steps , data=stepsperday) + geom_histogram(colour = "darkgreen", fill = "tomato",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "tomato",binwidth=5000)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "darkgreen", fill = "tomato",binwidth=5000) + xlab("My x label")
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + xlab("Total steps per day")
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + xlab("Total steps per day") + ggtitle("Histogram of the total number of steps taken each day")
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
hist(stepsperday$steps)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
hist(stepsperday$steps)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
hist(stepsperday$steps)
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
mean(stepsperday, na.rm=TRUE)
median(stepsperday, na.rm=TRUE)
mean(stepsperday$steps, na.rm=TRUE)
median(stepsperday$steps, na.rm=TRUE)
averages <- aggregate(x=list(steps=database$steps), by=list(interval=database$interval), FUN=mean, na.rm=TRUE)
averages
ggplot(data=averages, aes(x=interval, y=steps)) + geom_line() + xlab("5-minute interval") + ylab("average number of steps taken")
ggplot(data=averages, aes(x=interval, y=steps)) + geom_line() + xlab("5-minute interval") + ylab("Average num. of steps")
ggplot(data=averages, aes(x=interval, y=steps)) + geom_line() + xlab("5-minute interval") + ylab("Average number of steps")
ggplot(data=averages, aes(x=interval, y=steps)) + geom_line() + xlab("5 minute interval") + ylab("Average number of steps")
ggplot(data=averages, aes(x=interval, y=steps)) + geom_line(colour = "tomato") + xlab("5 minute interval") + ylab("Average number of steps")
ggplot(data=averages, aes(x=interval, y=steps)) + geom_line(colour = "tomato") + labs(x="5 minute interval", y="Average number of steps", title="Average daily activity")
ggplot(data=averages, aes(x=interval, y=steps)) + geom_line(colour = "tomato") + labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average daily activity")
averages[which.max(averages$steps),]
average_all <- aggregate(x=list(steps=database$steps), by=list(interval=database$interval), FUN=mean, na.rm=TRUE)
ggplot(data=average_all, aes(x=interval, y=steps)) + geom_line(colour = "tomato") + labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average daily activity")
average_all[which.max(averages$steps),]
average_all[which.max(averages$steps),][1]
average_all[which.max(averages$steps),][1]/5
average_all[which.max(averages$steps),]
max_steps<- average_all[which.max(averages$steps),]
missing_values <- is.na(database$steps)
missing_values
table(missing_values)
count(missing_values)
sum(missing_values)
fill.missing <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.dataset <- dataset
filled.dataset$steps <- mapply(fill.missing, filled.dataset$steps, filled.dataset$interval)
fill.missing <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.database <- database
filled.database$steps <- mapply(fill.missing, filled.database$steps, filled.database$interval)
filled.database
qplot(steps , data=filled.database, geom="histogram",binwidth=5000)
+ geom_histogram(colour = "black", fill = "tomato",binwidth=5000)
+ labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
head(filled.database)
qplot(steps , data=filled.database, geom="histogram",binwidth=1000)
+ geom_histogram(colour = "black", fill = "tomato",binwidth=1000)
+ labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
qplot(steps , data=filled.database, geom="histogram",binwidth=1000)
+ geom_histogram(colour = "black", fill = "tomato",binwidth=1000)
+ labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000)
+ geom_histogram(colour = "black", fill = "tomato",binwidth=5000)
+ labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
#1.3 Calculate and report the mean and median of the total nu
qplot(steps , data=stepsperday, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
ggplot(data=average_all, aes(x=interval, y=steps)) + geom_line(colour = "tomato") + labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average daily activity")
qplot(steps , data=filled.database, geom="histogram",binwidth=1000) + geom_histogram(colour = "black", fill = "tomato",binwidth=1000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
head(filled.database)
tail(filled.database)
stepsperday_filled <- data.frame(tapply(filled.database$steps, filled.database$date, FUN=sum, na.rm=TRUE))
colnames(stepsperday_filled)<-c("steps")
qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=1000) + geom_histogram(colour = "black", fill = "tomato",binwidth=1000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=5000) + geom_histogram(colour = "black", fill = "tomato",binwidth=5000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "tomato",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=2000) + geom_histogram(colour = "black", fill = "tomato",binwidth=2000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "tomato",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
qplot(steps , data=stepsperday, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "tomato",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
mean(filled.database$steps, na.rm=TRUE)
median(filled.database$steps, na.rm=TRUE)
median(filled.database$steps)
mean(filled.database$steps)
median(filled.database$steps)
filled.database
qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "lightblue",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
p1<- qplot(steps , data=stepsperday, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "tomato",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
p2<- qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "lightblue",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
multiplot(p1, p2)
grid.arrange(p1, p2, ncol = 2, main = "Main title")
library(grid)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, ncol = 2, main = "Main title")
grid.arrange(p1, p2, ncol = 2)
grid.arrange(p1, p2, ncol = 1)
p2<- qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "lightblue",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day without NA's")
p1<- qplot(steps , data=stepsperday, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "tomato",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day with NA's")
p2<- qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "lightblue",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day without NA's")
grid.arrange(p1, p2, ncol = 1)
p1<- qplot(steps , data=stepsperday, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "tomato",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day")
p2<- qplot(steps , data=stepsperday_filled, geom="histogram",binwidth=3000) + geom_histogram(colour = "black", fill = "lightblue",binwidth=3000) + labs(x="Total steps per day", title="Histogram of the total number of steps taken each day (NA's Filled)")
grid.arrange(p1, p2, ncol = 1)
weekday_weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.database$date <- as.Date(filled.database$date)
filled.database$day <- sapply(filled.database$date, FUN=weekday_weekend)
filled.database$day
filled.database
filled.database$date
weekdays(filled.database$date)
Sys.setlocale("LC_TIME", "English")
weekdays(filled.database$date)
filled.database$date <- as.Date(filled.database$date)
filled.database$day <- sapply(filled.database$date, FUN=weekday_weekend)
filled.database$day
filled.database$day
averages_day <- aggregate(steps ~ interval + day, data=filled.database, mean)
ggplot(averages_day, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
ggplot(averages_day, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average weekends x weekdays")
ggplot(averages_day, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) + labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average weekends x weekdays")
ggplot(averages_day, aes(interval, steps, colour = cut)) + geom_line() + facet_grid(day ~ .) + labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average weekends x weekdays")
ggplot(averages_day, aes(interval, steps)) + geom_line(colour = cut) + facet_grid(day ~ .) + labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average weekends x weekdays")
ggplot(averages_day, aes(interval, steps, colour = day)) + geom_line() + facet_grid(day ~ .) + labs(x="5 minute interval", y="Average number of steps (across all days)", title="Average weekends x weekdays")
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "MASS", "Matrix", "mgcv", "mime", "nlme", "nnet", "Rcpp", "RMySQL", "rpart", "spatial", "stringi", "survival", "testthat"))
install.packages(c("boot", "class", "cluster", "codetools", "foreign",
